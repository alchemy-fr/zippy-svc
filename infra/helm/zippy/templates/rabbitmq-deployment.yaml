{{- with .Values.rabbitmq }}
{{- if .enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zippy.fullname" $ }}-rabbitmq
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: zippy
      tier: rabbitmq
  template:
    metadata:
      labels:
        app: zippy
        tier: rabbitmq
    spec:
      {{- if $.Values.nodeSelector }}
      nodeSelector: {{ toYaml $.Values.nodeSelector | nindent 8 }}
      {{- end }}
      volumes:
      - name: rabbitmq
        {{- if .persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "zippy.fullname" $ }}-rabbitmq-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - {{ include "zippy.fullname" $ }}-rabbitmq
      containers:
      - name: rabbitmq
        image: rabbitmq:3.7.14-management
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: rabbitmq
          mountPath: "/var/lib/rabbitmq"
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: {{ .externalSecretName | default (printf "%s-rabbitmq" (include "zippy.fullname" $)) }}
              key: {{ ternary "RABBITMQ_USER" .externalSecretMap.username (empty .externalSecretName) }}
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .externalSecretName | default (printf "%s-rabbitmq" (include "zippy.fullname" $)) }}
              key: {{ ternary "RABBITMQ_PASSWORD" .externalSecretMap.password (empty .externalSecretName) }}
        envFrom:
        - configMapRef:
            name: {{ include "zippy.fullname" $ }}-rabbitmq-config
{{- end }}
{{- end }}
